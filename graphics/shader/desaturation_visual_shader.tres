[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 0.8

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=6]
constant = Vector3( 0.3, 0.59, 0.11 )

[sub_resource type="VisualShaderNodeVectorInterp" id=7]

[sub_resource type="VisualShaderNodeTexture" id=8]
source = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=9]

[sub_resource type="VisualShaderNodeVectorLen" id=10]

[resource]
code = "shader_type canvas_item;
render_mode unshaded;




void vertex() {
// Output:0

}

void fragment() {
// Input:20
	vec3 n_out20p0;
	n_out20p0 = vec3(SCREEN_UV,0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = textureLod( SCREEN_TEXTURE , n_out20p0.xy, 0.0 );
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Vector:27
	vec3 n_out27p0;
	n_out27p0 = vec3(0.300000,0.590000,0.110000);

// VectorOp:25
	vec3 n_out25p0;
	n_out25p0 = n_out27p0 * n_out3p0;

// VectorLen:32
	float n_out32p0;
	n_out32p0 = length( n_out25p0 );

// VectorCompose:31
	vec3 n_out31p0;
	n_out31p0 = vec3( n_out32p0 , n_out32p0 , n_out32p0 );

// Scalar:17
	float n_out17p0;
	n_out17p0 = 0.800000;

// VectorInterp:28
	vec3 n_out28p0;
	n_out28p0 = mix( n_out3p0 , n_out31p0 , vec3(n_out17p0) );

// Input:21
	vec3 n_out21p0;
	n_out21p0 = vec3(UV,0.0);

// Texture:22
	vec3 n_out22p0;
	float n_out22p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out21p0.xy );
		n_out22p0 = _tex_read.rgb;
		n_out22p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out28p0;
	COLOR.a = n_out22p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2369.21, -184.554 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( -1040, 200 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -2120, 220 )
nodes/fragment/17/node = SubResource( 1 )
nodes/fragment/17/position = Vector2( -1560, 320 )
nodes/fragment/20/node = SubResource( 2 )
nodes/fragment/20/position = Vector2( -2340, 260 )
nodes/fragment/21/node = SubResource( 3 )
nodes/fragment/21/position = Vector2( -2340, 380 )
nodes/fragment/22/node = SubResource( 4 )
nodes/fragment/22/position = Vector2( -1300, 360 )
nodes/fragment/25/node = SubResource( 5 )
nodes/fragment/25/position = Vector2( -1920, 100 )
nodes/fragment/27/node = SubResource( 6 )
nodes/fragment/27/position = Vector2( -2140, 120 )
nodes/fragment/28/node = SubResource( 7 )
nodes/fragment/28/position = Vector2( -1300, 240 )
nodes/fragment/31/node = SubResource( 9 )
nodes/fragment/31/position = Vector2( -1540, 100 )
nodes/fragment/32/node = SubResource( 10 )
nodes/fragment/32/position = Vector2( -1720, 140 )
nodes/fragment/connections = PoolIntArray( 20, 0, 3, 0, 22, 1, 0, 1, 27, 0, 25, 0, 3, 0, 25, 1, 21, 0, 22, 0, 31, 0, 28, 1, 3, 0, 28, 0, 17, 0, 28, 2, 25, 0, 32, 0, 32, 0, 31, 0, 32, 0, 31, 1, 32, 0, 31, 2, 28, 0, 0, 0 )

